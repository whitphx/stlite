name: Postbuild

on:
  # For security reasons, this workflow is separated from the test-and-build workflow and triggered by the `workflow_run` event following it.
  # The deployment jobs need access to the repository secrets,
  # however, workflows triggered by the `pull_request` event don't have access to the secrets for security reasons
  # because those workflows check out the PR's branch that may have malicious external contributors' changes,
  # so we can't use the `pull_request` event to trigger the deployment jobs.
  # Then, we have to run the deployment jobs in this separated workflow that is allowed to access the secrets because it runs in the context of the default branch which can be considered as a trusted branch.
  # It is a security good practice introduced in the GitHub's official blog, https://securitylab.github.com/resources/github-actions-preventing-pwn-requests/
  workflow_run:
    workflows: ["Test and Build"]
    types:
      - completed

env:
  python-version-file: ".python-version"
  node-version-file: ".nvmrc"

permissions: {}

jobs:
  get-build-info:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      branch: ${{ steps.build-info.outputs.branch }}
      tag: ${{ steps.build-info.outputs.tag }}
      trigger-sha: ${{ steps.build-info.outputs.trigger-sha }}
      head-sha: ${{ steps.build-info.outputs.head-sha }}
      pr-number: ${{ steps.build-info.outputs.pr-number }}
    steps:
      - name: Download build info
        uses: actions/download-artifact@v4
        with:
          name: build-info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Read build info
        id: build-info
        run: |
          echo "branch=$(cat branch)" >> $GITHUB_OUTPUT
          echo "tag=$(cat tag)" >> $GITHUB_OUTPUT
          echo "trigger-sha=$(cat trigger-sha)" >> $GITHUB_OUTPUT
          echo "head-sha=$(cat head-sha)" >> $GITHUB_OUTPUT
          echo "pr-number=$(cat pr-number)" >> $GITHUB_OUTPUT

  inform-package-stats:
    needs: get-build-info
    if: ${{ needs.get-build-info.outputs.pr-number }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: ./.github/actions/inform-package-stats
        with:
          pr-number: ${{ needs.get-build-info.outputs.pr-number }}

  deploy-sharing:
    needs: get-build-info
    if: ${{ needs.get-build-info.outputs.branch }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy @stlite/sharing to Cloudflare Pages
    outputs:
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - run: mkdir -p ${{ runner.temp }}/artifacts/

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: stlite-sharing
          path: ${{ runner.temp }}/artifacts/sharing
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Deploy
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65
        id: deploy
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ${{ runner.temp }}/artifacts/sharing --project-name=stlite-sharing --branch=${{ needs.get-build-info.outputs.branch }} --commit-hash=${{ needs.get-build-info.outputs.trigger-sha }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-sharing-editor:
    needs: [get-build-info, deploy-sharing]
    if: ${{ needs.get-build-info.outputs.branch }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy @stlite/sharing-editor to Cloudflare Pages
    outputs:
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: stlite-sharing-editor
          path: ${{ runner.temp }}/artifacts/sharing-editor
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Inject SHARING_APP_URL
        run: |
          echo "${{ needs.deploy-sharing.outputs.url }}" > ${{ runner.temp }}/artifacts/sharing-editor/SHARING_APP_URL

      - name: Deploy
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65
        id: deploy
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ${{ runner.temp }}/artifacts/sharing-editor --project-name=stlite-sharing-editor --branch=${{ needs.get-build-info.outputs.branch }} --commit-hash=${{ needs.get-build-info.outputs.trigger-sha }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  notify-cloudflare-pages-deployments:
    needs: [get-build-info, deploy-sharing, deploy-sharing-editor]
    if: ${{ needs.get-build-info.outputs.pr-number != '' }}

    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ needs.get-build-info.outputs.pr-number }}
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;
            const sharingUrl = '${{ needs.deploy-sharing.outputs.url }}';
            const sharingEditorUrl = '${{ needs.deploy-sharing-editor.outputs.url }}';
            const logUrl = 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `Deployment completed successfully ([log](${logUrl})).
            * Sharing App: ${sharingUrl}
            * Sharing Editor: ${sharingEditorUrl}
            `
            });

  publish-browser:
    needs: [get-build-info]
    if: ${{ startsWith(needs.get-build-info.outputs.tag, 'v') }}

    permissions:
      contents: write  # Necessary for creating releases: https://github.com/softprops/action-gh-release#permissions

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Enable Corepack
      run: corepack enable
    - uses: actions/setup-node@v4
      with:
        node-version-file: ${{ env.node-version-file }}
        registry-url: 'https://registry.npmjs.org'
        scope: '@stlite'

    - uses: actions/download-artifact@v4
      with:
        name: stlite-browser
        path: packages/browser
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - run: yarn publish stlite-browser-v*.tgz --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      working-directory: packages/browser

    - name: Create a new release
      uses: softprops/action-gh-release@v2
      with:
        files: packages/browser/stlite-browser-v*.tgz
        generate_release_notes: true
        tag_name: ${{ needs.get-build-info.outputs.tag }}

  publish-desktop:
    needs: [get-build-info]
    if: ${{ startsWith(needs.get-build-info.outputs.tag, 'v') }}

    permissions:
      contents: write  # Necessary for creating releases: https://github.com/softprops/action-gh-release#permissions

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Enable Corepack
      run: corepack enable
    - uses: actions/setup-node@v4
      with:
        node-version-file: ${{ env.node-version-file }}
        registry-url: 'https://registry.npmjs.org'
        scope: '@stlite'

    - uses: actions/download-artifact@v4
      with:
        name: stlite-desktop
        path: packages/desktop
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - run: yarn publish stlite-desktop-v*.tgz --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      working-directory: packages/desktop

    - name: Create a new release
      uses: softprops/action-gh-release@v2
      with:
        files: packages/desktop/stlite-desktop-v*.tgz
        generate_release_notes: true
        tag_name: ${{ needs.get-build-info.outputs.tag }}
