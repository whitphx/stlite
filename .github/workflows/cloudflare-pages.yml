name: Cloudflare Pages Deployment

on:
  workflow_run:
    workflows: ["Test, Build, and Publish"]
    types:
      - completed

permissions: {}

jobs:
  get-cloudflare-pages-info:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      branch: ${{ steps.cloudflare-pages-info.outputs.branch }}
      commit-hash: ${{ steps.cloudflare-pages-info.outputs.commit-hash }}
      pr-number: ${{ steps.cloudflare-pages-info.outputs.pr-number }}
    steps:
      - name: Download deployment info
        uses: actions/download-artifact@v4
        with:
          name: cloudflare-pages-info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Read deployment info
        id: cloudflare-pages-info
        run: |
          echo "branch=$(cat branch)" >> $GITHUB_OUTPUT
          echo "commit-hash=$(cat commit-hash)" >> $GITHUB_OUTPUT
          echo "pr-number=$(cat pr-number)" >> $GITHUB_OUTPUT

  deploy-sharing:
    needs: get-cloudflare-pages-info
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy @stlite/sharing to Cloudflare Pages
    outputs:
      url: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
    steps:
      - run: mkdir -p ${{ runner.temp }}/artifacts/

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: stlite-sharing
          path: ${{ runner.temp }}/artifacts/sharing
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Deploy
        uses: cloudflare/wrangler-action@392082e81ffbcb9ebdde27400634aa004b35ea37
        id: deploy
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ${{ runner.temp }}/artifacts/sharing --project-name=stlite-sharing --branch=${{ needs.get-cloudflare-pages-info.outputs.branch }} --commit-hash=${{ needs.get-cloudflare-pages-info.outputs.commit-hash }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-sharing-editor:
    needs: [get-cloudflare-pages-info, deploy-sharing]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy @stlite/sharing-editor to Cloudflare Pages
    outputs:
      url: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: stlite-sharing-editor
          path: ${{ runner.temp }}/artifacts/sharing-editor
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Inject SHARING_APP_URL
        run: |
          echo "${{ needs.deploy-sharing.outputs.url }}" > ${{ runner.temp }}/artifacts/sharing-editor/SHARING_APP_URL

      - name: Deploy
        uses: cloudflare/wrangler-action@392082e81ffbcb9ebdde27400634aa004b35ea37
        id: deploy
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ${{ runner.temp }}/artifacts/sharing-editor --project-name=stlite-sharing-editor --branch=${{ needs.get-cloudflare-pages-info.outputs.branch }} --commit-hash=${{ needs.get-cloudflare-pages-info.outputs.commit-hash }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  comment-on-pr:
    needs: [get-cloudflare-pages-info, deploy-sharing, deploy-sharing-editor]
    if: needs.get-cloudflare-pages-info.outputs.pr-number != ''

    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Set PR number environment variable
        env:
          PR_NUMBER: ${{ needs.get-cloudflare-pages-info.outputs.pr-number }}
        run: echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - name: Comment on PR
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ env.PR_NUMBER }}
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;
            const sharingUrl = '${{ needs.deploy-sharing.outputs.url }}';
            const sharingEditorUrl = '${{ needs.deploy-sharing-editor.outputs.url }}';
            const logUrl = 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `Deployment completed successfully. Sharing: ${sharingUrl}\nSharing Editor: ${sharingEditorUrl}\nLog: ${logUrl}`
            });
