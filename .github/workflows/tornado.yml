name: Integration tests with streamlit and tornado

on:
  push:
    branches: [ "main" ]
    paths:
      - 'packages/stlite-kernel/py/tornado'
      - 'packages/stlite-kernel/py/e2etests/**/*'
      - 'streamlit/**/*'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'packages/stlite-kernel/py/tornado'
      - 'packages/stlite-kernel/py/e2etests/**/*'
      - 'streamlit/**/*'

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # The following steps are based on https://github.com/python-poetry/poetry/blob/601dc7896c812d39b75f2358b17a9460561d3866/.github/workflows/main.yml#L51-L79
    - name: Get full Python version
      id: full-python-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Bootstrap poetry
      run: |
        curl -sL https://install.python-poetry.org | python - -y

    - name: Update PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure poetry
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: timeout 10s poetry run pip --version || rm -rf .venv

    - name: Create virtualenv
      run: python -m venv .venv

    # Set up the /streamlit submodule
    ## Set up apt packages. Ref: https://github.com/streamlit/streamlit/wiki/Contributing#ubuntu
    - name: Install Streamlit build dependencies
      run: sudo apt install protobuf-compiler
    - name: Set up Streamlit and build proto
      run: |
        . .venv/bin/activate
        cd streamlit
        make mini-init

    - name: Install dependencies
      shell: bash
      run: poetry install
      working-directory: packages/stlite-kernel/py/e2etests

    - name: Run pytest
      shell: bash
      run: poetry run python -m pytest -v tests
      working-directory: packages/stlite-kernel/py/e2etests
